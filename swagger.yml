openapi: "3.0.2"
info:
  title: NodeCraft
  version: "1.0.0"
components:
  # Authentication using bearer token
  securitySchemes:
    bearerAuth:
      description: "#### Example: Bearer [TOKEN]"
      type: http
      scheme: bearer
      bearerFormat: JWT

  # Response message
  responses:
    Success:
      description: |
        - success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: success

    UnprocessableEntity:
      description: |
        - Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: validation error

    ConflictError:
      description: |
        - ConflictError
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: conflict error

    BadRequestError:
      description: |
        - bad request error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: bad request error

    UnauthorizedError:
      description: |
        - Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized

    NotFoundError:
      description: |
        - NotFoundError
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not Found

paths:
  /auth/register:
    post:
      description: register user
      summary: register user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Rutvik Makvana
                email:
                  type: string
                  example: rutvik@mailinator.com
                password:
                  type: string
                  example: rutvik@123

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/register-image:
    post:
      summary: register user with image field
      tags:
        - Auth
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Rutvik Makvana
                email:
                  type: string
                  example: rutvik@mailinator.com
                password:
                  type: string
                  example: rutvik@123
                profilePicture:
                  type: string
                  format: binary

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /auth/login:
    post:
      description: login user
      summary: login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: rutvik@mailinator.com
                password:
                  type: string
                  example: rutvik@123

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/refresh-token:
    post:
      description: Refresh token
      summary: Refresh token
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzM3NDAxMjI3OGEzMGRiODUyYTM1N2MiLCJpYXQiOjE3MzE2Nzc5ODUsImV4cCI6MTczMjI4Mjc4NX0.yUkxGyGn-8ljEEjjEoSi5H2P_CocV2ptaMRCQz7O4Dw

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/logout:
    post:
      description: Logout
      summary: Logout
      tags:
        - Auth

      security:
        - bearerAuth: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzM3NDAxMjI3OGEzMGRiODUyYTM1N2MiLCJpYXQiOjE3MzE2Nzc5ODUsImV4cCI6MTczMjI4Mjc4NX0.yUkxGyGn-8ljEEjjEoSi5H2P_CocV2ptaMRCQz7O4Dw

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /user/profile:
    get:
      description: Profile
      summary: Profile
      tags:
        - User

      security:
        - bearerAuth: []

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /user/list:
    get:
      summary: Users list
      tags:
        - User
      security:
        - bearerAuth: []

      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          schema:
            type: integer
            example: 10

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /post/upload:
    post:
      description: Upload post
      summary: Upload post
      tags:
        - Post

      security:
        - bearerAuth: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title post
                content:
                  type: string
                  example: content post

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /post/comment/{postId}:
    post:
      description: Give comment on post
      summary: Give comment on post
      tags:
        - Post

      security:
        - bearerAuth: []

      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
            example: 659e45cbd2d793f9ca90420b

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: Nice pic!

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /post/all:
    get:
      description: All post with user details
      tags:
        - Post

      security:
        - bearerAuth: []

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
